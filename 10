
1.	Инструменты развертывания Linux. Инструменты для захвата и клонирования образов.
1. Общие сведения о захвате и клонировании образов  
В корпоративных средах и дата-центрах часто требуется массовое развертывание одинаковых систем. Чтобы избежать ручной настройки каждой машины, используются инструменты захвата и клонирования образов. 
Принцип работы:  
    Настройка эталонной системы  – устанавливаются ОС, драйверы, пакеты, настраиваются параметры.
    Захват образа  – создается копия диска или раздела в виде файла (.img, .dd, .tar и т. д.).
    Развёртывание  – образ переносится на другие устройства, сохраняя единые настройки.
2. Основные инструменты для клонирования и захвата образов  
1. Clonezilla  
Мощный инструмент для создания образов и клонирования дисков. 
    Поддерживает:  большинство файловых систем (ext4, NTFS, XFS, Btrfs и др.)
    Режим работы:  LiveCD/USB
    Использует:  partclone, ntfsclone, dd
    Преимущества: 
        Высокая скорость (копирует только занятые блоки)
        Поддержка сетевого клонирования через PXE
        Возможность сжатия и разделения образов
    Недостатки: 
        Нет графического интерфейса
        Не поддерживает инкрементные резервные копии
2. dd  
Классический низкоуровневый инструмент Unix/Linux для побайтового копирования дисков. 
    Преимущества: 
        Встроен в любую Linux-систему
        Работает с любой файловой системой
        Позволяет копировать MBR/GPT
    Недостатки: 
        Копирует все данные, включая пустые блоки → медленно
        Медленнее, чем Clonezilla и Partclone
3. Partclone  
Утилита для оптимизированного клонирования разделов. 
    Поддерживает:  ext4, NTFS, XFS, Btrfs
    Преимущества: 
        Копирует только занятые блоки
        Использует сжатие
        Быстрее, чем d
    Недостатки: 
        Не работает с поврежденными файловыми системами
4. FSArchiver  
Инструмент резервного копирования файловой системы. 
    Особенности: 
        Копирует не диск, а файлы
        Можно изменять размеры разделов при восстановлении
        Поддерживает инкрементное резервное копирование
    Преимущества: 
        Гибкость при восстановлении
        Сжатие образов
    Недостатки: 
        Не копирует загрузчик
3. Облачные и контейнерные образы  
Для автоматизации развёртывания в облаке и контейнерах также используются: 
    Docker images  – для контейнеров
    Vagrant boxes  – для виртуальных машин
    Cloud-init  – для первоначальной настройки облачных образов
4. Преимущества использования инструментов клонирования: 
    Ускорение процесса установки
    Единообразие настроек
    Минимизация ошибок при ручной настройке
    Возможность быстрого восстановления системы
2.	Безопасность клиентской ОС. Аутентификация и контроль доступа. PAM
Аутентификация и контроль доступа
– ключевые аспекты
безопасности в Linux. В многопользовательских системах важно не только
проверять подлинность пользователей, но и ограничивать их действия в
соответствии с установленными политиками.
Linux использует PAM (Pluggable Authentication Modules) для гибкого
управления аутентификацией, Kerberos для безопасной проверки учетных
данных и LDAP (Lightweight Directory Access Protocol) для
централизованного управления пользователями и группами. Эти технологии
позволяют администраторам гибко управлять безопасностью системы,
обеспечивая надежную аутентификацию и защиту данных.
PAM (Pluggable Authentication Modules) – это гибкая и модульная
система аутентификации в Linux. Она позволяет управлять процессом
проверки учетных данных и настройки доступа без необходимости
изменения исходного кода программ.
Система PAM действует как промежуточный слой между прикладными
программами (например, SSH, sudo, login) и методами аутентификации
(пароли, токены, двухфакторная аутентификация, LDAP, Kerberos и другие).
PAM позволяет администраторам легко изменять и настраивать
политику безопасности, добавлять новые механизмы аутентификации и
контролировать доступ пользователей в систему.
Каждая программа, использующая аутентификацию, обращается к
PAM, а тот, в свою очередь, применяет соответствующие модули для
проверки учетных данных пользователя. Это позволяет динамически
изменять политику аутентификации без модификации самих программ.
PAM
работает на основе конфигурационных файлов, которые
определяют правила аутентификации и авторизации для каждой программы.
Эти файлы находятся в каталоге /etc/pam.d/ или в общем конфигурационном
файле /etc/pam.conf.
Когда пользователь пытается войти в систему, процесс проверки
учетных данных проходит через четыре этапа:
Аутентификация (auth) – проверка личности пользователя (пароль,
ключ, токен и т. д.).
Авторизация (account) – проверка прав доступа (истек ли срок действия
учетной записи, можно ли входить в систему и т. д.).
Управление паролем (password) – изменение пароля, политика
сложности.
Управление сеансом (session) – настройка среды пользователя после
успешного входа.

3.	В среде PNETLab развернуть сеть с двумя виртуальными машинами (маршрутизатор, маршрутизатор) и подключением к сети Интернет. Настроить протокол динамической маршрутизации. Выбор протокола обосновать в виде отчета и сохранить на рабочем столе. 

Создать 2 пк
1 пк 172.16.4.1/28
2 пк 172.16.4.2/28
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
На первом пк:
apt install frr
nano /etc/frr/daemons
Меняем ospfd=no на ospfd=yes
Systemctl restart frr
Vtysh
Conf t
Router-id 1.1.1.1
Router ospf
Network 172.16.4.1/28 area 0
Neighbor 172.16.4.2
End
Do wr m
Ex
Воторой пк:
apt update && apt install frr
nano /etc/frr/daemons
Меняем ospfd=no на ospfd=yes
Systemctl restart frr
Vtysh
Conf t
Router-id 2.2.2.2
Router ospf
Network 172.16.4.2/28 area 0
Neighbor 172.16.4.1
End
Do wr m
Ex
На двух компах одновременно:
Systemctl restart frr
Vtysh
show ip ospf neighbor (показывает самые ближайшие пути и на этом этапе работа сделана)
show ip route 
•	OSPF — это протокол состояния канала (link-state), что позволяет строить точную карту сети и быстро реагировать на изменения топологии.
•	Поддерживает VLSM (суть в возможности использовать разные маски подсетей в одном сетевом пространстве в зависимости от потребностей) и CIDR (метод IP-адресации, позволяющий гибко управлять пространством IP-адресов), что делает его гибким для современных сетей.
•	Является открытым стандартом, совместимым с различным оборудованием.
•	Идеально подходит для масштабируемых и сложных сетей.
•	Бесплатный и не требует лицензирования.
