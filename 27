
1.	Безопасность клиентской ОС. Контроль доступа на уровне системы. Firewalld
Контроль доступа на уровне системы
Современные операционные системы, включая Linux, требуют
надежных механизмов контроля доступа, чтобы предотвращать
несанкционированное использование ресурсов, защитить систему от
уязвимостей и минимизировать последствия атак. В Linux используются
различные механизмы безопасности, такие как SELinux и AppArmor для
контроля доступа приложений, а также Firewalld для управления сетевым
доступом. Firewalld – контролирует сетевой трафик и управляет доступом к
сетевым сервисам.
Firewalld – это динамическая система управления брандмауэром в
Linux, заменяющая iptables и предоставляющая более гибкий механизм
работы с правилами сетевого доступа.
В отличие от iptables, Firewalld использует зоны (zones), которые
определяют уровень безопасности для сетевых интерфейсов. Например,
можно настроить одно правило для домашней сети и другое для
общественного Wi-Fi.
Основные зоны Firewalld
drop – блокирует весь входящий трафик.
block – блокирует трафик, отправляя сообщение "адрес
недоступен".
•
public – открывает доступ только к определенным сервисам.
trusted – разрешает весь трафик.
Шифрование дисков и файлов
Шифрование данных – один из ключевых методов защиты информации
в современных операционных системах. В Linux существует несколько
решений для защиты данных на уровне дисков и отдельных файлов.
Основные технологии шифрования:
2.	Удаленный доступ. Протокол удаленного доступа RDP. Реализация протокола в Linux
RDP (Remote Desktop Protocol) и xRDP в Linux
RDP (Remote Desktop Protocol) – это сетевой протокол для
удаленного доступа к рабочему столу, разработанный Microsoft. Он
широко используется в Windows, но также может быть применен в Linux с
помощью xRDP – открытой реализации сервера RDP.
Основная идея: пользователь может работать с удаленной системой,
как если бы он находился за её экраном, передавая изображения рабочего
стола, ввод с клавиатуры и мыши.
RDP широко используется для:
Администрирования серверов
Подключения к рабочему месту из дома
Обеспечения удаленного доступа для сотрудников и клиентов
Виртуализации рабочих столов (VDI)
Как это работает?
Клиент отправляет команды по сети (например, движение
мыши).
Сервер обрабатывает команды и отрисовывает новый кадр
рабочего стола.
Обновленный кадр сжимается и отправляется обратно клиенту.
Особенности RDP:
Использует порт 3389/TCP
Работает по модели клиент-сервер
Поддерживает сквозное шифрование (TLS, CredSSP)
Позволяет передавать звук, буфер обмена, файлы, USB-
устройства
Ключевые возможности RDP
✅ Высокая производительность
Использует сжатие данных, что делает работу плавной даже при
слабом интернете.
Передает только измененные части экрана, а не весь экран целиком.
✅ Поддержка нескольких пользователей
В Windows Server поддерживаются многопользовательские сеансы
(RDS).
В Linux через xRDP можно запускать несколько параллельных
сессий.
✅ Безопасность
Шифрование Сессий с помощью
TLS, NLA (Network Level
Authentication).
Возможность ограничения IP-адресов и установки двухфакторной
аутентификации (2FA).
✅ Передача локальных ресурсов
Поддержка проброса звука, принтеров, флешек, COM-портов и
буфера обмена.
✅ Кроссплатформенность
Клиенты RDP есть для Windows, macOS, Linux, Android, iOS.
Подключение возможно даже через браузер (если сервер настроен на
HTML5 RDP).
Достоинства и недостатки RDP
✅ Плюсы RDP
✅ Быстродействие – сжатие данных и передача только изменённого
контента.
✅ Встроенное шифрование (TLS, NLA) – защита от перехвата
данных.
✅ Многопользовательские сеансы – поддержка виртуальных рабочих
столов.
✅ Передача локальных устройств – принтеров, флешек, звука, буфера
обмена.
✅ Кроссплатформенность – можно подключаться с Windows, macOS,
Linux, iOS, Android.
Хорошая интеграция с Windows – идеально для
администрирования серверов Windows.
✅ Минусы RDP
✅ Проприетарный протокол – требует лицензирования для Windows
Server.
✅ Проблемы с графикой и 3D – OpenGL и DirectX могут работать
медленно.
✅ Ограниченная поддержка Linux – требуется xRDP, который
работает не со всеми окружениями.
✅
Требует настройки безопасности – по умолчанию RDP-
авторизация может быть уязвимой.
✅ Не подключается к активному сеансу (по умолчанию) – создаёт
новый сеанс вместо работы с текущим.
xRDP позволяет пользователям подключаться к графическому
рабочему столу Linux с других устройств, используя стандартный клиент
Microsoft Remote Desktop (mstsc.exe) или другие клиенты RDP.
✅ Когда использовать xRDP?
Если нужно подключаться к Linux с Windows без
дополнительного ПО
Если Важна поддержка нескольких одновременных пользователей
Если требуется лучшее сжатие и производительность в слабых сетях

3.	В среде PNETLab развернуть сеть с двумя виртуальными машинами (маршрутизатор, маршрутизатор) и подключением к сети Интернет. Настроить протокол динамической маршрутизации. Выбор протокола обосновать в виде отчета и сохранить на рабочем столе. 
Создать 2 пк
1 пк 172.16.4.1/28
2 пк 172.16.4.2/28
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
На первом пк:
apt install frr
nano /etc/frr/daemons
Меняем ospfd=no на ospfd=yes
Systemctl restart frr
Vtysh
Conf t
Router-id 1.1.1.1
Router ospf
Network 172.16.4.1/28 area 0
Neighbor 172.16.4.2
End
Do wr m
Ex
Воторой пк:
apt update && apt install frr
nano /etc/frr/daemons
Меняем ospfd=no на ospfd=yes
Systemctl restart frr
Vtysh
Conf t
Router-id 2.2.2.2
Router ospf
Network 172.16.4.2/28 area 0
Neighbor 172.16.4.1
End
Do wr m
Ex
На двух компах одновременно:
Systemctl restart frr
Vtysh
show ip ospf neighbor (показывает самые ближайшие пути и на этом этапе работа сделана)
show ip route 
•	OSPF — это протокол состояния канала (link-state), что позволяет строить точную карту сети и быстро реагировать на изменения топологии.
•	Поддерживает VLSM (суть в возможности использовать разные маски подсетей в одном сетевом пространстве в зависимости от потребностей) и CIDR (метод IP-адресации, позволяющий гибко управлять пространством IP-адресов), что делает его гибким для современных сетей.
•	Является открытым стандартом, совместимым с различным оборудованием.
•	Идеально подходит для масштабируемых и сложных сетей.
•	Бесплатный и не требует лицензирования.
