1.	Динамическая маршрутизация. Отличие от статической маршрутизации.
Маршрутизация — это процесс определения пути передачи данных между сетями. Основная задача маршрутизации — доставить пакеты от отправителя к получателю через наиболее подходящие сетевые узлы. 
Статическая маршрутизация 
    Маршруты задаются вручную администратором.
    Подходит для небольших и простых сетей с неизменной топологией.
    Не требует вычислительных ресурсов на маршрутизаторах.
    Требует ручного обновления при изменении сети (например, при выходе из строя канала).
    Менее гибкая и сложная в управлении при увеличении размера сети.
Преимущества:  
    Простота реализации в малых сетях.
    Низкое потребление ресурсов.
Недостатки:  
    Негибкость при изменениях в сети.
    Высокая вероятность ошибок при ручной настройке.
    Не подходит для больших и часто меняющихся сетей.
Динамическая маршрутизация  
    Маршруты создаются и обновляются автоматически с помощью специальных протоколов.
    Используется в больших и сложных сетях, где топология может меняться.
    Маршрутизаторы обмениваются информацией о состоянии сети и рассчитывают оптимальные пути.
    Обеспечивает высокую отказоустойчивость и масштабируемость.
Преимущества:  
    Автоматическое обновление таблиц маршрутов.
    Быстрая реакция на сбои в сети.
    Возможность масштабирования без глобальной перенастройки.
    Самонастройка при добавлении новых участков сети.
Недостатки:  
    Требует больше ресурсов (процессор, память).
    Сложнее в настройке и понимании.
    Может быть подвержена нестабильности при неправильной конфигурации.
ТУТ ТАБЛИЦА
Характеристик  Статик   Динам
Настройка	Вручную	Автоматически
Гибкость	Низкая	Высокая
Управление	Простое в малых сетях	Сложное, но эффективное
Реакция на сбои	Не реагирует автоматически	Находит альтернативные пути
Ресурсы	Минимальные	Требует больше памяти и CPU
Масштабируемость	Низкая	Высокая

2.	Удаленный доступ. Протокол удаленного доступа NX
В современных IT-инфраструктурах удаленный доступ играет
ключевую роль, позволяя пользователям работать с корпоративными
ресурсами из любой точки мира. В Linux-среде удаленный доступ
используется для администрирования серверов, работы пользователей с
удаленными рабочими столами и приложениями, а также для организации
защищенного доступа через интернет.

NoMachine NX – это технология удаленного рабочего стола с
высокой производительностью и малой задержкой. Разработана компанией
NoMachine и использует NX-протокол (усовершенствованный аналог X11),
который сжимает и оптимизирует передаваемый трафик.
✅ Основная идея NX: минимизировать передаваемые данные, чтобы
обеспечить быструю и плавную работу даже в слабых сетях.
✅ Где применяется NX?
Удаленный доступ к рабочему столу Linux и Windows
Виртуализация рабочих мест (VDI)
Работа с графическими приложениями по сети
Администрирование серверов
✅ Как работает NX?
Клиент отправляет запрос NX-серверу.
Сервер сжимает графические данные и передаёт их клиенту.
Клиент отображает рабочий стол с минимальной задержкой.
✅ Особенности NoMachine NX:
Использует сжатие и кэширование данных для быстрой работы
Поддерживает передачу звука, USB, буфера обмена, принтеров
Работает по SSH, TLS или собственному протоколу
Поддерживает Windows, Linux, macOS, Android, iOS
Может подключаться к активному сеансу пользователя
Как работает NoMachine (NX)?
Клиент-серверная модель
NX-клиент – программа для подключения к удаленному рабочему
столу.
NX-сервер – обрабатывает подключение и передаёт данные.
Поддержка графических сред (DE)
Работает практически со всеми средами рабочего стола Linux.
❌ Плюсы NoMachine NX
✅ Высокая скорость и плавность работы
Использует интеллектуальное сжатие и кэширование, быстрее, чем
VNC и RDP.
✅ Передача звука, видео, USB, файлов
Можно пробрасывать флешки, принтеры, аудио, видео, порты и
буфер обмена.
✅ Безопасное соединение (SSH, TLS)
Поддерживает сквозное шифрование, защищает от атак.
✅ Работает в слабых сетях
Может использоваться даже при низкой скорости интернета (256
Kbps).
✅ Подключение к активному сеансу
В отличие от RDP (xRDP), можно видеть текущий экран
пользователя.
✅ Кроссплатформенность
Работает в Linux, Windows, macOS, Android, iOS.
✅ Поддержка Wayland (через XWayland)
Работает даже на новых версиях GNOME и KDE.
❌ Минусы NoMachine NX
✅ Проприетарное ПО
Исходный код закрыт, кроме старой версии NX 3
✅ Ограничения бесплатной версии
Поддерживает только одного пользователя одновременно.
✅ Требует установки клиента NoMachine
В отличие от RDP, нельзя просто использовать стандартный клиент
Windows.
✅ Может быть сложен в настройке
Параметры сети и аутентификации требуют доработки для
корпоративного использования.

3.	Развернуть и настроить GRE-туннель между двумя маршрутизаторами. Настроить маршруты для корректной работы трафика.
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)

Создаем в нмтуи ip tunnel mode gre
ДЛЯ HQ RTR
«Parent» указываем интерфейс в сторону ISP (ens3) · Задаём «Local IP» (IP на интерфейсе HQ-RTR в сторону ISP 172.16.4.2) · Задаём «Remote IP» (IP на интерфейсе BR-RTR в сторону ISP 172.16.5.2) · Переходим к «IPv4 CONFIGURATION», переключаем на «Manual» · Задаём адрес IPv4 для туннеля (10.10.0.1/30)
ДЛЯ BR RTR«Parent» указываем интерфейс в сторону ISP (ens3) · Задаём «Local IP» (IP на интерфейсе BR-RTR в сторону ISP 172.16.5.2) · Задаём «Remote IP» (IP на интерфейсе HQ-RTR в сторону ISP 172.16.4.2) · Переходим к «IPv4 CONFIGURATION», переключаем на «Manual» · Задаём адрес IPv4 для туннеля (10.10.0.2/30)
Для корректной работы протокола динамической маршрутизации требуется увеличить параметр TTL на интерфейсе туннеля (ОБЯЗАТЕЛЬНОЧТОБЫРАБОТАЛOSPF!!!): nmcli connection modify tun1 ip-tunnel.ttl 64
ping 10.10.0.2 на хк ртр
ping 10.10.0.1 на бр ртр

