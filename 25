1.	Инструменты развертывания Linux. Автоматизированная установка ОС. Kickstart. 
Развертывание операционной системы — это процесс установки и настройки ОС на одном или нескольких компьютерах. 
В корпоративных сетях и дата-центрах используется автоматизация для ускорения и унификации процесса. 
Задачи инструментов развертывания:  
    Автоматическая разметка дисков
    Установка пакетов
    Настройка сети, пользователей и сервисов
    Массовое копирование эталонных образов
Популярные инструменты:  
    Kickstart (RHEL/CentOS/Fedora)  – автоматизация установки через файл ks.cfg.
    Preseed (Debian/Ubuntu)  – аналог Kickstart для Debian-подобных систем.
    Clonezilla , dd , partclone  – используются для создания и восстановления образов дисков.
    PXE + NFS  – сетевая загрузка без USB/DVD.
2. Автоматизированная установка ОС 
Автоматизация позволяет сократить время установки, избежать ошибок и обеспечить единые стандарты на всех устройствах.
Преимущества:  
    Единообразие настроек
    Быстрая массовая установка
    Возможность удалённого развёртывания
    Минимизация человеческого фактора
Методы автоматизации:  
    Использование конфигурационных файлов (например, ks.cfg, preseed.cfg)
    PXE-загрузка — сетевая установка без USB/DVD
    NFS, HTTP, FTP — источники для загрузки пакетов и образов
3. Kickstart – автоматизированная установка RHEL, CentOS и Fedora  
Kickstart  — это механизм автоматической установки Red Hat Enterprise Linux (RHEL) , CentOS  и Fedora . 
Он использует конфигурационный файл ks.cfg, в котором заранее задаются все параметры установки. 
Принцип работы:  
    Файл ks.cfg содержит все необходимые параметры:
        Разметка диска
        Выбор пакетов
        Настройка сети и пользователей
    Установщик (Anaconda) считывает этот файл и выполняет установку без участия пользователя.
Области применения:  
    Массовая установка RHEL/CentOS/Fedora на серверы
    Развертывание рабочих станций в корпоративных сетях
    Облачные среды (часто в сочетании с PXE)
Преимущества:  
    Полностью автоматизирует установку
    Поддерживает гибкую настройку (сетевые параметры, диски, пакеты)
    Можно использовать как локально, так и по сети (HTTP, FTP, NFS)
Недостатки:  
    Работает только с дистрибутивами на основе RHEL
    Требует предварительного создания и проверки файла ks.cfg
    Не подходит для Debian/Ubuntu
2.	Безопасность клиентской ОС. Автоматизация безопасности. Puppet
Автоматизация безопасности
Безопасность информационных систем – это непрерывный процесс,
требующий постоянного контроля и обновления. Вручную управлять
настройками безопасности на десятках или сотнях серверов сложно и
неэффективно. Именно поэтому используются системы автоматизации
конфигурации, такие как Ansible, Puppet и SaltStack, которые позволяют
централизованно управлять политиками безопасности, обновлять системы,
контролировать файлы конфигурации и настраивать защиту серверов.
Автоматизация безопасности позволяет:
Обеспечить единообразие настроек на всех серверах.
Быстро устранять уязвимости и применять обновления.
Уменьшить влияние человеческого фактора и вероятность
ошибок.
Легко масштабировать инфраструктуру, применяя политики
безопасности на новые серверы.
Puppet– мощный инструмент автоматизации конфигурации,
использующий pull-модель, где сервер (Puppet Master) управляет клиентами
(Puppet Agents). Это делает Puppet отличным выбором для долговременного
управления безопасностью.
Puppet использует манифесты – файлы с кодом, который определяет
состояние системы.
Преимущества Puppet:
Централизованный контроль через Puppet Master.
Хорошо работает в больших инфраструктурах.
Возможность раздельного управления конфигурацией через
классы.
Недостатки Puppet:
Требует агента на каждом клиенте, что усложняет установку.
Крутая кривая обучения, сложнее в освоении по сравнению с
Ansible.
3.	Настройте DHCP-сервер:
· Установите пакет DHCP-сервера на Linux-систему.
· Создайте конфигурационный файл с определением параметров сети и настроек DHCP-сервера.
· Запустите DHCP-сервер и проверьте, что устройства в сети получают IP-адреса автоматически.
apt install isc-dhcp-server
  Создайте конфигурационный файл с определением параметров сети и настроек DHCP-сервера.
  nano /etc/default/isc-dhcp-server
  INTERFACESv4=”ens4” выходим
  nano /etc/dhcp/dhcpd.conf
  раскоментировать authoritative
  option domaın - name "au-team.irро";
  option domain-name-servers 8.8.8.8; в самом низу пишем следующее:
  subnet 172.16.4.0 netmask 255.255.255.240 {
  range 172.16.4.2 172.16.4.10;
  option routers 172.16.4.1;
  } выходим
  systemctl enable--now isc-dhcp-server
  systemctl restart isc-dhcp-server
  systemctl status isc-dhcp-server смотрим работает 
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
  переводим в nmtui соединение на клиенте в automatic
   Запустите DHCP-сервер и проверьте, что устройства в сети получают IP-адреса автоматически.
