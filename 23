1.	Безопасность клиентской ОС. Контроль доступа на уровне системы. AppArmor
Контроль доступа на уровне системы
Современные операционные системы, включая Linux, требуют
надежных механизмов контроля доступа, чтобы предотвращать
несанкционированное использование ресурсов, защитить систему от
уязвимостей и минимизировать последствия атак. В Linux используются
различные механизмы безопасности, такие как SELinux и AppArmor для
контроля доступа приложений, а также Firewalld для управления сетевым
доступом.
Эти инструменты работают на разных уровнях:
SELinux и AppArmor – ограничивают привилегии процессов,
обеспечивая строгую изоляцию приложений.
Firewalld – контролирует сетевой трафик и управляет доступом к
сетевым сервисам.
Все эти технологии помогают минимизировать риски атак, повысить
устойчивость системы и улучшить управление безопасностью в
корпоративных средах.
AppArmor
– это система принудительного контроля доступа,
аналогичная SELinux, но более простая в настройке. В отличие от SELinux,
где используется мандатный контроль доступа на основе политик и меток
безопасности, AppArmor работает на основе профилей, которые определяют,
какие файлы и ресурсы может использовать конкретное приложение.
AppArmor использует файлы профилей, расположенные в
/etc/apparmor.d/, которые содержат правила для конкретных программ.
Например, профиль для nginx может разрешать доступ только к /var/www/,
блокируя доступ ко всем другим каталогам.
Основные режимы работы AppArmor
Enforce – политика применяется строго, запрещая неразрешенные
действия.
Complain – нарушения фиксируются, но не блокируются
(используется для отладки).
2.	Инструменты развертывания Linux. Автоматизированная установка ОС. Debootstrap.
     Автоматизированная установка ОС  
Автоматизация позволяет сократить время установки, избежать ошибок и обеспечить единые стандарты на всех устройствах. 
Преимущества:  
    Единообразие настроек
    Быстрая массовая установка
    Возможность удалённого развёртывания
    Минимизация человеческого фактор
Методы автоматизации:  
    Использование конфигурационных файлов (например, ks.cfg, preseed.cfg)
    PXE-загрузка — сетевая установка без USB/DVD
    NFS, HTTP, FTP — источники для загрузки пакетов и образов
Debootstrap  — это утилита для установки минимальной системы Debian  или Ubuntu  без использования стандартного установщика. Подходит для создания контейнеров, chroot-окружений или сборки минимального образа системы. 
Основные функции:  
    Загружает минимальные системные пакеты
    Разворачивает их в указанной директории
    Готовит среду для дальнейшей настройки
Принцип работы:  
    Скачивает ядро и базовые пакеты из официальных репозиториев.
    Распаковывает их в нужную директорию (например, /mnt/debian).
    После установки можно войти в систему через chroot и продолжить настройку.
Области применения:  
    Создание минимального образа для контейнеров (LXC, Docker)
    Развертывание систем на встроенном оборудовании
    Подготовка окружений для тестирования и отладки
Преимущества:  
    Полный контроль над установленными пакетами
    Подходит для создания кастомных образов
    Легко интегрируется в автоматизированные процессы
Недостатки:  
    Не подходит для массовой установки на рабочие станции
    Требует дополнительной настройки после установки
    Не устанавливает загрузчик и графическую оболочку

3.	Создать и настроить виртуальный коммутатор с «VLAN-ами» на виртуальной машине, используя Open vSwitch (OVS).

Создать два компика но вообще вланы можно настроить на одном компе
1 комп 172.16.4.1/28
2 комп 172.16.4.2/28
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
Все действия на первом компе делаются:
apt-get install openvswitch-switch
systemctl enable --now openvswitch-switch
ovs-vsctl add-br hq-sw
ovs-vsctl add-port hq-sw ens4 tag=100
(добавлять цифру в ens и tag= в зависимости от того сколько компов создаем но у нас два)
ovs-vsctl add-port hq-sw vlan100 tag=100 -- set interface vlan100 type=internal
systemctl restart openvswitch-switch
systemctl restart NetworkManager
ip link set hq-sw up
ip a add 172.16.4.1/28 dev vlan100
ip link set vlan100 up
ip –c –br a (там покажет включенные вланы)
пингуем влан 100 и все

