1.	Форматы образов ОС Linux. Структура образа.
Что такое образ операционной системы?  
Образ — это файл или набор файлов, содержащий точную копию диска или раздела с установленной системой, настройками и данными. Используется для: 
    Быстрого развертывания виртуальных машин
    Создания контейнеров
    Подготовки загрузочных носителей
    Резервного копирования
Основные форматы образов Linux:  
1. RAW  
    Простой и универсальный формат.
    Представляет собой побайтовую копию диска.
    Совместим со всеми гипервизорами.
    Занимает много места, нет сжатия или снапшотов.
2. QCOW2 (QEMU Copy-on-Write)  
    Формат для QEMU/KVM.
    Поддерживает сжатие, шифрование и снапшоты.
    Экономит место за счёт динамического расширения.
    Медленнее, чем RAW.
3. VMDK  
    Используется в VMware.
    Может быть монолитным или раздельным.
    Подходит для виртуализации, но менее гибкий вне экосистемы VMware.
     
4. ISO  
    Формат образов оптических дисков (CD/DVD).
    Часто используется для установки ОС.
    Может содержать загрузчик (например, ISOLINUX).
5. Docker Image  
    Используется для контейнеров.
    Состоит из слоёв (layers), что позволяет повторно использовать данные.
    Легко масштабируется и быстро разворачивается.
Структура образа ОС Linux:  
Образ состоит из нескольких ключевых компонентов: 
    Загрузочный сектор (MBR / GPT)  – содержит информацию о разметке диска и указатель на загрузчик.
    Файловая система  – хранит системные и пользовательские данные (ext4, XFS и др.).
    Ядро Linux (Kernel)  – основной компонент, управляющий ресурсами системы.
    Initrd / Initramfs  – временная файловая система, необходимая для загрузки ядра до монтирования корневой ФС.
    Приложения и данные  – установленное ПО и пользовательские файлы.
    Метаданные  – информация о структуре образа, его размере и формате.
Преимущества использования разных форматов:  
    RAW  – максимальная совместимость.
    QCOW2  – экономия места и поддержка снапшотов.
    VMDK  – интеграция с VMware.
    ISO  – удобен для установки ОС.
    Docker Image  – идеален для контейнеров и CI/CD.
2.	Безопасность клиентской ОС. Шифрование дисков и файлов. LUKS и eCryptfs
Шифрование дисков и файлов
Шифрование данных – один из ключевых методов защиты информации
в современных операционных системах. В Linux существует несколько
решений для защиты данных на уровне дисков и отдельных файлов.
Основные технологии шифрования:
LUKS (Linux Unified Key Setup) – стандартное средство шифрования
целых дисков и разделов.
eCryptfs (Enterprise Cryptographic Filesystem) – файловая система
для прозрачного шифрования отдельных файлов.
EncFS (Encrypted Filesystem) – шифрование файлов на уровне
пользовательского пространства.
LUKS (Linux Unified Key Setup) – это стандартный механизм
шифрования дисков в Linux, использующий dm-crypt. Он позволяет
зашифровать целые диски или разделы, защищая данные от
несанкционированного доступа.
В основе LUKS лежит использование симметричного шифрования. Это
означает, что один и тот же ключ используется как для зашифровки, так и
для расшифровки данных. Данные шифруются на уровне блочного
устройства, поэтому операционная система не видит их в открытом виде,
пока пользователь не введет правильный ключ.
В большинстве современных дистрибутивов Linux (Ubuntu, Debian,
CentOS, Fedora) cryptsetup установлен по умолчанию.
eCryptfs – это криптографическая файловая система, работающая
поверх существующей файловой системы (например, ext4). В отличие от
LUKS, который шифрует весь диск, eCryptfs позволяет зашифровать
отдельные каталоги. Используется в Ubuntu для автоматического
шифрования домашней папки пользователя.
.
3.	Настройте службу сетевого времени на базе сервиса chrony. В качестве сервера выступает Server-chrony.
В качестве клиента настройте ВМ client. В качестве клиента настройте ВМ client
Создать два компа
На первом компе пишем:
Nano /etc/network/interfaces
auto ens3
iface ens3 inet dhcp
ctrl + x (сохраняем)
systemctl restart networking
apt update && apt install chrony
(Server-chrony - 10.10.1.1  client - 10.10.1.2)
Nano /etc/network/interfaces
auto ens4
iface ens4 inet static
address 10.10.1.1/24
systemctl restart networking
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
на второй комп:
Nano /etc/network/interfaces
auto ens3
iface ens3 inet static
address 10.10.1.2/24
gateway 10.10.1.1
ctrl + x (сохраняем)
systemctl restart networking
apt update && apt install chrony
systemctl status chrony (на всех компах должно гореть статус актив)
на первом компе:
nano /etc/chrony/chrony.conf
Закомментировать строчку #pool 2.debian.pool.ntp.org iburst
server 127.0.0.1 iburst prefer
local stratum 5
allow 10.10.1.0/24
systemctl restart chrony
systemctl enable --now chrony
на втором компе:
nano /etc/chrony/chrony.conf
Закомментировать строчку #pool 2.debian.pool.ntp.org iburst
server 10.10.1.1 iburst
systemctl restart chrony
systemctl enable --now chrony
на первом компе и на втором:
chronyc tracking — она выведет информацию о конфигурации chrony
chronyc sources — она укажет на сервера, к которым подключился
сконфигурированный сервер времени Server-chrony.
chronyc sources — она укажет на сервера, к которым подключился
сконфигурированный сервер времени Server-chrony.
