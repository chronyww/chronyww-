1.	Динамическая маршрутизация. Протокол BGP
Динамическая маршрутизация позволяет маршрутизаторам автоматически строить и обновлять, и оптимизировать маршруты. Это достигается за счёт
обмена информацией между сетевыми устройствами, анализа текущей топологии сети и расчёта наилучших путей передачи данных в реальном времени.
BGP (Border Gateway Protocol) Протокол маршрутизации в интернете. Управляет маршрутизацией между провайдерами, поддерживает сложные политики.
BGP — это внешний протокол динамической маршрутизации (EGP), используемый для обмена маршрутами между автономными системами (AS)  в интернете.
Он является основой межсетевой маршрутизации и отвечает за передачу трафика между крупными сетями, такими как сети провайдеров, дата-центров 
и корпораций.    Работает на основе политики , а не только технических метрик.  Использует TCP-соединение  (порт 179) для надёжной передачи данных.
Роль iBGP и eBGP:  
    eBGP  — связь между разными AS (основная роль — обмен маршрутами между провайдерами).
    iBGP  — распространение маршрутов внутри AS. Требует полного соединения между маршрутизаторами (full mesh), либо использование Route Reflectors или Confederations.
Преимущества BGP:     Высокая гибкость  в управлении маршрутами.
    Поддержка политики маршрутизации .
    Стабильность и масштабируемость.
    Работает с огромным количеством маршрутов (более 900 тыс. префиксов)
Недостатки BGP:  
    Медленная сходимость  (может занимать минуты).
    Высокие требования к ресурсам (память, процессор).
    Сложность настройки и управления.
2.	Служба динамической трансляции адресов. NAT. Служба iptables в Linux.
NAT (Network Address Translation) — это механизм трансляции сетевых адресов, используемый для изменения IP-адресов в заголовках сетевых 
пакетов во время их прохождения через маршрутизатор или шлюз. NAT является одним из наиболее широко используемых решений в современных 
компьютерных сетях, особенно в условиях ограниченного количества доступных IPv4-адресов. Служба NAT в Linux является частью мощного и 
гибкого механизма фильтрации и обработки сетевых пакетов — iptables (а в более новых системах — nftables). Она позволяет реализовать 
все типы NAT: статический, динамический, PAT (NAT Overload), а также проброс портов (DNAT). Вданной главе мы подробно разберём, как N
AT интегрирован в сетевуюподсистему Linux, из каких компонентов он состоит, и как он работает.Linux использует сетевой стек ядра, в 
рамках которого действуетподсистема netfilter. Это программный фреймворк, встроенный в ядро Linux,который позволяет изменять и 
фильтровать сетевой трафик.Взаимодействие с netfilter осуществляется через такие утилиты, как:iptables (традиционный инструмент 
zдля настройки правил),nftables (современная замена iptables), ip (часть пакета iproute2, используется для настройки маршрутов и интерфейсов).
3.	Показать работу команд mkdir, chmod, cp, copy, mv, rm Создать файл «text1.txt» и переименовать его в командой строке в «text2.txt»
Создать директорию
Bash mkdir my_directory
Перейти в созданную директорию
Bash cd my_directory
Создать файл «text1.txt»
Bash touch text1.txt
Проверить права доступа к файлу
Bash ls -l text1.txt
Изменить права доступа к файлу
Bash chmod 644 text1.txt
Скопировать файл в ту же директорию под другим именем
Bash cp text1.txt text_copy.txt
Переименовать файл «text1.txt» в «text2.txt»
Bash mv text1.txt text2.txt
Удалить файл «text_copy.txt»
Bash rm text_copy.txt
