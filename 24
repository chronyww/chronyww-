1.	Клиентская операционная система. Жизненный цикл. Методы развертывания клиентских ОС.
Клиентская операционная система  — это программное обеспечение, установленное на персональных компьютерах, ноутбуках и рабочих 
станциях для обеспечения работы пользователей. Она управляет ресурсами устройства и предоставляет интерфейс для взаимодействия с приложениями и сетью. 
Жизненный цикл клиентской ОС  
Жизненный цикл описывает этапы использования клиентского компьютера в организации: 
1. Планирование  
    Определение потребностей.
    Выбор стандартов и оборудования.
    Бюджетирование.
2. Приобретение  
    Закупка оборудования и лицензий.
    Подготовка к установке.
3. Развертывание  
    Установка ОС и необходимого ПО.
    Настройка сети и параметров безопасности.
4. Эксплуатация и обслуживание  
    Регулярные обновления.
    Техническая поддержка.
    Мониторинг и устранение неполадок.
5. Утилизация  
    Вывод из эксплуатации.
    Безопасное удаление данных.
    Обслуживание или замена оборудования.
Цели управления жизненным циклом:  
    Снижение затрат
    Повышение стабильности и безопасности
    Обеспечение соответствия лицензионным соглашениям
Методы развертывания клиентских ОС  
Выбор метода зависит от размера организации, доступной инфраструктуры и требований к скорости и единообразию установки. 
1. Ручная установка  
    Установка с USB/DVD на каждый компьютер.
    Простой, но медленный и неоднородный метод.
    Подходит только для небольших объёмов.
2. Развертывание с образа диска  
    Создание эталонного образа системы.
    Использование инструментов (Clonezilla, Acronis) для копирования на другие устройства.
    Обеспечивает единообразие.
    Требует подготовки образа.
3. Серверное развертывание (Server-Based Deployment)  
    Централизованное хранение образов на сервере.
    Развертывание через сеть.
    Высокая масштабируемость.
    Требуется наличие сервера и хорошей сети.
4. Windows Deployment Services (WDS)  
    Инструмент Microsoft для сетевой загрузки и установки Windows.
    Подходит для сред Windows.
    Требует настроенного сервера WDS.
5. System Center Configuration Manager (SCCM)  
    Комплексное решение для автоматизации развёртывания.
    Поддержка массовой установки, обновлений, управления приложениями.
    Требует сложной инфраструктуры и обучения.
Факторы выбора метода развертывания:  
    Размер организации (число устройств)
    Наличие инфраструктуры
    Бюджет
    Требования к скорости и однородности
    Квалификация персонала
2.	Безопасность клиентской ОС. Аутентификация и контроль доступа. LDAP
Аутентификация и контроль доступа
– ключевые аспекты
безопасности в Linux. В многопользовательских системах важно не только
проверять подлинность пользователей, но и ограничивать их действия в
соответствии с установленными политиками.
Linux использует PAM (Pluggable Authentication Modules) для гибкого
управления аутентификацией, Kerberos для безопасной проверки учетных
данных и LDAP (Lightweight Directory Access Protocol) для
централизованного управления пользователями и группами. Эти технологии
позволяют администраторам гибко управлять безопасностью системы,
обеспечивая надежную аутентификацию и защиту данных.
LDAP(LightweightDirectoryAccessProtocol) – это протокол,
предназначенный для доступа к распределенным каталогам, содержащим
информацию о пользователях, группах, компьютерах и других объектах сети.
В Linux LDAP часто используется для централизованного управления
учетными записями пользователей и их правами.
Основная идея LDAP – хранение всех учетных записей в единой базе
данных, что позволяет упростить управление пользователями, обеспечивая
единую точку аутентификации. Это особенно полезно в корпоративных
сетях, где администратор может управлять доступом сотрудников ко всем
ресурсам из одного места.
LDAP широко применяется в связке с другими системами
аутентификации, такими как Kerberos (для безопасной проверки учетных
данных) или PAM (для интеграции с локальными сервисами).
LDAP организует данные в виде иерархической структуры,
напоминающей дерево. В этом дереве хранятся объекты – пользователи,
группы, устройства и другие элементы сети.
Каждый объект в каталоге LDAP представлен в виде записи (entry),
имеющей уникальный идентификатор (Distinguished Name, DN). Данные в
LDAP хранятся в виде атрибутов, описывающих объект. Например,
пользователь может иметь такие атрибуты, как имя (cn), логин (uid), адрес
электронной почты (mail) и пароль (userPassword).
Основные компоненты LDAP
Сервер LDAP – центральная база данных, хранящая информацию об
учетных записях.
Клиенты LDAP – программы, запрашивающие информацию из базы
(например, SSH, sudo, Samba).
DN (Distinguished Name) – уникальный идентификатор объекта в
каталоге.
OU (Organizational Unit) – контейнер для группировки объектов
(например, ou=users).
DC (Domain Component) – обозначает доменное имя в структуре LDAP
(dc=example,dc=com).
Объекты (Entries) – записи в каталоге (пользователи, группы,
устройства).
Схема (Schema) – определяет возможные атрибуты объектов
(например, cn, uid, mail).
LDAP использует модель "клиент-сервер": клиент отправляет запрос на
сервер, а сервер отвечает, предоставляя запрашиваемые данные.
3.	Развернуть и настроить GRE-туннель между двумя маршрутизаторами. Настроить маршруты для корректной работы трафика.
(apt update –y)
(iptables –t nat –A POSTROUTING –j MASQUERADE)
(apt install iptables-persistent -y)
(перезагрузить пк что бы интернет встал на второй комп при подключении к нему + iptables –t nat –S для проверки стоит ли построутинг и маскарад)
Создаем в нмтуи ip tunnel mode gre
ДЛЯ HQ RTR
«Parent» указываем интерфейс в сторону ISP (ens3) · Задаём «Local IP» (IP на интерфейсе HQ-RTR в сторону ISP 172.16.4.2) ·
Задаём «Remote IP» (IP на интерфейсе BR-RTR в сторону ISP 172.16.5.2) · Переходим к «IPv4 CONFIGURATION», переключаем на «Manual» ·
Задаём адрес IPv4 для туннеля (10.10.0.1/30)
ДЛЯ BR RTR«Parent» указываем интерфейс в сторону ISP (ens3) · 
Задаём «Local IP» (IP на интерфейсе BR-RTR в сторону ISP 172.16.5.2) · 
Задаём «Remote IP» (IP на интерфейсе HQ-RTR в сторону ISP 172.16.4.2) · 
Переходим к «IPv4 CONFIGURATION», переключаем на «Manual» · Задаём адрес IPv4 для туннеля (10.10.0.2/30)
Для корректной работы протокола динамической маршрутизации требуется увеличить параметр TTL на интерфейсе туннеля (ОБЯЗАТЕЛЬНОЧТОБЫРАБОТАЛOSPF!!!): nmcli connection modify tun1 ip-tunnel.ttl 64
ping 10.10.0.2 на хк ртр
ping 10.10.0.1 на бр ртр

