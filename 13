1.	Динамическая маршрутизация. Протокол EIGRP
EIGRP (Enhanced Interior Gateway Routing Protocol)  — это усовершенствованный протокол динамической маршрутизации,
разработанный Cisco. Относится к категории гибридных , так как сочетает идеи протоколов вектора расстояния и состояния канала. 
Как работает EIGRP:  
    Маршрутизаторы обмениваются Hello-сообщениями  для установления соседства.
    После установления соседства происходит обмен маршрутной информацией.
    Формируется топологическая таблица , где хранятся все доступные маршруты и их метрики.
Алгоритм DUAL  выбирает лучший маршрут (successor ) и возможные резервные (feasible successors ).
  При потере основного маршрута переключение на резервный происходит мгновенно, без пересчёта топологии.
Метрика EIGRP:  Пропускную способность (bandwidth)Задержку (delay)Надёжность (reliability)Загрузку (load)
На практике чаще всего используются пропускная способность и задержка . 
Преимущества EIGRP:  
    Быстрая сходимость за счёт DUAL и наличия резервных маршрутов.
    Минимальный сетевой трафик благодаря инкрементальным обновлениям.
    Гибкая настройка маршрутов (суммаризация, балансировка нагрузки).
    Поддержка балансировки трафика по нескольким путям, даже с разными метриками.
Недостатки EIGRP:  
    Долгое время был проприетарным (Cisco), что ограничивало его использование.
    Сложность настройки и понимания в больших сетях.
    Не предназначен для работы между автономными системами (в отличие от BGP).
Применяется в корпоративных и провайдерских сетях на оборудовании Cisco.
2.	Протокол туннелирования GRE.
GRE (Generic Routing Encapsulation) — это протокол туннелирования, который позволяет инкапсулировать пакеты одного сетевого 
протокола в другой, создавая «виртуальные» соединения между удалёнными объектами через сети общего пользования, например, 
через Интернет. GRE часто используется для подключения удалённых филиалов компании или создания виртуальных частных сетей (VPN).
Основные задачи GRE-туннелей: Поддержка мультипротокольности Создание виртуальных соединений Инкапсуляция трафика
Принцип работы GRE
GRE действует по следующей схеме:
Инкапсуляция: GRE инкапсулирует исходный пакет, добавляя к
нему GRE-заголовок и новый IP-заголовок. 
Туннелирование: Пакет передаётся через сеть от одного
маршрутизатора к другому (туннельные конечные точки).
Декапсуляция: Когда пакет достигает другой стороны туннеля,
маршрутизатор удаляет внешний заголовок GRE и передаёт исходный пакет
в его исходное сетевое окружение.
Преимущества GRE: простота и гибкость, Мультипротокольность, Поддержка динамической маршрутизации:
Недостатки GRE: Отсутствие шифрования: Оверхед (нагрузка):
3.	Установить пакет для работы с утилитами ping, traceroute, netstat. Показать принцип работы этих команд и объяснить их назначение
sudo apt update
sudo apt install iputils-ping traceroute net-tools
1. ping — проверка связи с удалённым хостом 
Назначение: 
•	Проверяет доступность другого устройства в сети.
•	Использует протокол ICMP (Internet Control Message Protocol).
•	Полезна для диагностики проблем с подключением.
Пример: 
ping google.com
Как работает: 
•	Отправляет небольшие ICMP-пакеты на указанный адрес.
•	Получатель отвечает, если это разрешено.
•	Выводит время отклика (latency) и процент потерь пакетов.

traceroute — отслеживание маршрута до хоста 
Назначение: 
•	Показывает маршрут, по которому пакеты проходят от вашего компьютера к целевому хосту.
•	Позволяет выявлять "узкие места" и сбои на маршруте.
traceroute google.com
Как работает: 
•	Отправляет пакеты с постепенно увеличивающимся TTL (Time To Live).
•	Каждый маршрутизатор уменьшает TTL на 1 и отправляет ответ при TTL=0.
•	Таким образом определяются все промежуточные узлы между вами и сервером

netstat — информация о сетевых соединениях 
Назначение: 
•	Показывает активные сетевые соединения (TCP/UDP), открытые порты и статистику сетевого интерфейса.
•	Полезен для диагностики сетевых проблем и анализа безопасности.
Примеры использования: 
netstat -a        # Все активные соединения
netstat -tuln     # TCP/UDP порты в состоянии LISTEN
netstat -r          # Таблица маршрутизации
Как работает: 
•	Читает информацию из системных файлов (/proc/net/tcp, /proc/net/udp и др.).
•	Также может использовать библиотеки ядра для получения данных о соединениях.
